posicao <- function(vetor){
table <- data.frame(Minimo = quantile(vetor, na.rm = T)[1],
Quartil_1 = quantile(vetor, na.rm = T)[2],
Media = mean(vetor, na.rm = T),
Mediana = quantile(vetor, na.rm = T)[3],
Quartil_3 = quantile(vetor, na.rm = T)[4],
Maximo = quantile(vetor, na.rm = T)[5])
row.names(table) <- NULL
table
}
dispersao <- function(vetor){
table <- data.frame(Amplitude = diff(range(vetor)),
Variancia = var(vetor),
Desvio_padrao = sd(vetor)#,
#Coef_variacao = 100*sd(vetor)/mean(vetor)
)
table
}
notas <- read.csv("notas-faltas-ce301.csv", dec = ',', sep = ';')
notas <- read.csv("notas-faltas-ce301.csv", dec = ',', sep = ';')
DT::datatable(notas[,c('GRR', 'P1.presencial',
"P1.remota", "P1",
"P2.presencial")],
class = 'cell-border stripe',
rownames = F,
#filter = 'top',
editable = T
)
pander::pander(posicao(notas$P2.presencial))
p1 = ggplot(notas) +
geom_histogram(aes(x=P2.presencial,
y=..density..),
position="identity",
col = 1,
lwd = 1,
breaks = seq(0,10,0.5)) +
geom_density(aes(x=P2.presencial,
y=..density..),
col = 4,
lwd = 1) +
ylab("Densidade") +
xlab("") +
ggtitle("Prova 2 - presencial")+
theme_classic() + theme(legend.position = 'none',
plot.title = element_text(family = "Helvetica",
face = "bold",
size = (20),
hjust = 0.5),
axis.title = element_text(face = "bold",
size = 15),
text = element_text(size=15))
library(ggplot2)
p1 = ggplot(notas) +
geom_histogram(aes(x=P2.presencial,
y=..density..),
position="identity",
col = 1,
lwd = 1,
breaks = seq(0,10,0.5)) +
geom_density(aes(x=P2.presencial,
y=..density..),
col = 4,
lwd = 1) +
ylab("Densidade") +
xlab("") +
ggtitle("Prova 2 - presencial")+
theme_classic() + theme(legend.position = 'none',
plot.title = element_text(family = "Helvetica",
face = "bold",
size = (20),
hjust = 0.5),
axis.title = element_text(face = "bold",
size = 15),
text = element_text(size=15))
p2 = ggplot(data = notas,
mapping = aes(y=P2.presencial, x='1')) +
stat_boxplot(geom ='errorbar')+
geom_boxplot(alpha = 1)+
stat_summary(fun.y=mean,
geom="point",
shape=20,
size=3,
color="red",
fill="red")+
ylab("Notas") +
xlab("") +
#ggtitle("Titulo")+
theme_classic() + theme(legend.position = 'none',
plot.title = element_text(family = "Helvetica",
face = "bold",
size = (20),
hjust = 0.5),
axis.title = element_text(face = "bold",
size = 15),
axis.text.y=element_blank(),
text = element_text(size=15)) +coord_flip()
ggarrange(p1, p2,
heights = c(2, 1),
align = "hv",
ncol = 1,
nrow = 2)
library(ggplot2)
library(ggpubr)
install.packages("ggpubr")
install.packages("ggpubr")
install.packages("ggpubr")
ggpubr::
library(ggpubr)
install.packages("lme4")
install.packages("lme4")
library(ggpubr)
install.packages("ggpubr")
library(ggplot2)
library(ggpubr)
p1 = ggplot(notas) +
geom_histogram(aes(x=P1.presencial,
y=..density..),
position="identity",
col = 1,
lwd = 1,
breaks = seq(0,10,0.5)) +
geom_density(aes(x=P1.presencial,
y=..density..),
col = 4,
lwd = 1) +
ylab("Densidade") +
xlab("") +
ggtitle("Prova 1 - presencial")+
theme_classic() + theme(legend.position = 'none',
plot.title = element_text(family = "Helvetica",
face = "bold",
size = (20),
hjust = 0.5),
axis.title = element_text(face = "bold",
size = 15),
text = element_text(size=15))
p2 = ggplot(data = notas,
mapping = aes(y=P1.presencial, x='1')) +
stat_boxplot(geom ='errorbar')+
geom_boxplot(alpha = 1)+
stat_summary(fun.y=mean,
geom="point",
shape=20,
size=3,
color="red",
fill="red")+
ylab("Notas") +
xlab("") +
#ggtitle("Titulo")+
theme_classic() + theme(legend.position = 'none',
plot.title = element_text(family = "Helvetica",
face = "bold",
size = (20),
hjust = 0.5),
axis.title = element_text(face = "bold",
size = 15),
axis.text.y=element_blank(),
text = element_text(size=15)) +coord_flip()
ggarrange(p1, p2,
heights = c(2, 1),
align = "hv",
ncol = 1,
nrow = 2)
library(ggplot2)
library(ggpubr)
p1 = ggplot(notas) +
geom_histogram(aes(x=P2.presencial,
y=..density..),
position="identity",
col = 1,
lwd = 1,
breaks = seq(0,10,0.5)) +
geom_density(aes(x=P2.presencial,
y=..density..),
col = 4,
lwd = 1) +
ylab("Densidade") +
xlab("") +
ggtitle("Prova 2 - presencial")+
theme_classic() + theme(legend.position = 'none',
plot.title = element_text(family = "Helvetica",
face = "bold",
size = (20),
hjust = 0.5),
axis.title = element_text(face = "bold",
size = 15),
text = element_text(size=15))
p2 = ggplot(data = notas,
mapping = aes(y=P2.presencial, x='1')) +
stat_boxplot(geom ='errorbar')+
geom_boxplot(alpha = 1)+
stat_summary(fun.y=mean,
geom="point",
shape=20,
size=3,
color="red",
fill="red")+
ylab("Notas") +
xlab("") +
#ggtitle("Titulo")+
theme_classic() + theme(legend.position = 'none',
plot.title = element_text(family = "Helvetica",
face = "bold",
size = (20),
hjust = 0.5),
axis.title = element_text(face = "bold",
size = 15),
axis.text.y=element_blank(),
text = element_text(size=15)) +coord_flip()
ggarrange(p1, p2,
heights = c(2, 1),
align = "hv",
ncol = 1,
nrow = 2)
p1 = ggplot(notas) +
geom_histogram(aes(x=P2.presencial,
y=..density..),
position="identity",
col = 1,
lwd = 1,
breaks = seq(0,10,1)) +
geom_density(aes(x=P2.presencial,
y=..density..),
col = 4,
lwd = 1) +
ylab("Densidade") +
xlab("") +
ggtitle("Prova 2 - presencial")+
theme_classic() + theme(legend.position = 'none',
plot.title = element_text(family = "Helvetica",
face = "bold",
size = (20),
hjust = 0.5),
axis.title = element_text(face = "bold",
size = 15),
text = element_text(size=15))
p2 = ggplot(data = notas,
mapping = aes(y=P2.presencial, x='1')) +
stat_boxplot(geom ='errorbar')+
geom_boxplot(alpha = 1)+
stat_summary(fun.y=mean,
geom="point",
shape=20,
size=3,
color="red",
fill="red")+
ylab("Notas") +
xlab("") +
#ggtitle("Titulo")+
theme_classic() + theme(legend.position = 'none',
plot.title = element_text(family = "Helvetica",
face = "bold",
size = (20),
hjust = 0.5),
axis.title = element_text(face = "bold",
size = 15),
axis.text.y=element_blank(),
text = element_text(size=15)) +coord_flip()
ggarrange(p1, p2,
heights = c(2, 1),
align = "hv",
ncol = 1,
nrow = 2)
library(ggplot2)
library(ggpubr)
p1 = ggplot(notas) +
geom_histogram(aes(x=P2.presencial,
y=..density..),
position="identity",
col = 1,
lwd = 1,
breaks = seq(0,10,0.5)) +
geom_density(aes(x=P2.presencial,
y=..density..),
col = 4,
lwd = 1) +
ylab("Densidade") +
xlab("") +
ggtitle("Prova 2 - presencial")+
theme_classic() + theme(legend.position = 'none',
plot.title = element_text(family = "Helvetica",
face = "bold",
size = (20),
hjust = 0.5),
axis.title = element_text(face = "bold",
size = 15),
text = element_text(size=15))
p2 = ggplot(data = notas,
mapping = aes(y=P2.presencial, x='1')) +
stat_boxplot(geom ='errorbar')+
geom_boxplot(alpha = 1)+
stat_summary(fun.y=mean,
geom="point",
shape=20,
size=3,
color="red",
fill="red")+
ylab("Notas") +
xlab("") +
#ggtitle("Titulo")+
theme_classic() + theme(legend.position = 'none',
plot.title = element_text(family = "Helvetica",
face = "bold",
size = (20),
hjust = 0.5),
axis.title = element_text(face = "bold",
size = 15),
axis.text.y=element_blank(),
text = element_text(size=15)) +coord_flip()
setwd("~/ce301")
rmarkdown::render_site()
\endColumns
0,05/2
0.05/2
1-0.05/2
knitr::opts_chunk$set(echo = TRUE, eval = T)
knitr::kable(data.frame(
Resposta = paste0('P(Y = 12) =',dbinom(12,12,0.8))))
paste0('P(Y = 12) =',dbinom(12,12,0.8))))
paste0('P(Y = 12) =',dbinom(12,12,0.8)))
paste0('P(Y = 12) =',dbinom(12,12,0.8))
paste0('1- P(Y = 12) - P(Y = 11) =',1 - dbinom(12,12,0.8) - dbinom(11,11,0.8)
)
paste0('1- P(Y = 0) =',1 - dbinom(0,12,0.8)
)
dbinom(0,12,0.8)
knitr::kable(data.frame(
Resposta = paste0('1- P(Y = 0) =',1 - dbinom(0,12,0.8))))
qnorm(0.9, 15,2)
PF1 <- 0.2
PF2 <- 0.3
PF3 <- 0.5
PAdadoF1 <- 0.2
PAdadoF2 <- 0.05
PAdadoF3 <- 0.02
c(PF1, PF2, PF3)
c(PAdadoF1, PAdadoF2, PAdadoF3)
c(PF1, PF2, PF3) * c(PAdadoF1, PAdadoF2, PAdadoF3)
sum(c(PF1, PF2, PF3) * c(PAdadoF1, PAdadoF2, PAdadoF3))
PA <- sum(c(PF1, PF2, PF3) * c(PAdadoF1, PAdadoF2, PAdadoF3))
PF1dadoA <- (PAdadoF1*PF1)/PA
PF1dadoA
PF2dadoA <- (PAdadoF2*PF2)/PA
PF2dadoA
PF3dadoA <- (PAdadoF3*PF3)/PA
PF3dadoA
PF1dadoA + PF2dadoA + PF3dadoA
0,.61+0.23+0.15
0.61+0.23+0.15
1-0.615-0.231
corr.f <-
function(nA, nB, r, x){
list(1-phyper(x-1, m=nB, n=nA, k=r), c(m=nB, n=nA), c(min = max(c(0, r+nB-(nA+nB))), max = min(c(r,nB))))
}
corr.f(9,6)
corr.f(9,6,8,3)
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
